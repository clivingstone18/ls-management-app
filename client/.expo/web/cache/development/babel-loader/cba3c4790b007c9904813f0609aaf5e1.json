{"ast":null,"code":"var times = [30, 60];\nvar ampm = 12;\nvar weekday = [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"];\nvar month = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\n\nfunction timeToStr(today) {\n  var hour = today.getHours();\n  var minute = today.getMinutes();\n  var timeOfDay;\n  hour >= ampm ? timeOfDay = \"PM\" : timeOfDay = \"AM\";\n  hour = updateTime(hour, \"hour\");\n  minute = updateTime(minute, \"minute\");\n  return hour + \":\" + minute + \" \" + timeOfDay;\n}\n\nfunction dateToStr(today) {\n  var day = today.getDay();\n  var date = today.getDate();\n  var monthnum = today.getMonth();\n  return weekday[day] + \" \" + date + \" \" + month[monthnum];\n}\n\nfunction updateTime(k, type) {\n  var p;\n  type === \"hour\" && k > ampm ? p = k - 12 : p = k;\n\n  if (p < 10) {\n    return \"0\" + p;\n  } else {\n    return p;\n  }\n}\n\nfunction minsToNextUpdate(minute) {\n  var min_diff = 30;\n  var i = 0;\n\n  for (i = 0; i < times.length; i++) {\n    var diff = times[i] - minute;\n\n    if (diff > 0 && diff < min_diff) {\n      min_diff = diff;\n    }\n  }\n\n  return min_diff;\n}\n\nexport { timeToStr, minsToNextUpdate, dateToStr };","map":{"version":3,"sources":["/Users/clairelivingstone/Desktop/ratio-tracker/client/TimeKeeper.js"],"names":["times","ampm","weekday","month","timeToStr","today","hour","getHours","minute","getMinutes","timeOfDay","updateTime","dateToStr","day","getDay","date","getDate","monthnum","getMonth","k","type","p","minsToNextUpdate","min_diff","i","length","diff"],"mappings":"AAAA,IAAMA,KAAK,GAAG,CAAC,EAAD,EAAK,EAAL,CAAd;AACA,IAAMC,IAAI,GAAG,EAAb;AACA,IAAMC,OAAO,GAAG,CACd,QADc,EAEd,QAFc,EAGd,SAHc,EAId,WAJc,EAKd,UALc,EAMd,QANc,EAOd,UAPc,CAAhB;AASA,IAAMC,KAAK,GAAG,CACZ,SADY,EAEZ,UAFY,EAGZ,OAHY,EAIZ,OAJY,EAKZ,KALY,EAMZ,MANY,EAOZ,MAPY,EAQZ,QARY,EASZ,WATY,EAUZ,SAVY,EAWZ,UAXY,EAYZ,UAZY,CAAd;;AAeA,SAASC,SAAT,CAAmBC,KAAnB,EAA0B;AAExB,MAAIC,IAAI,GAAGD,KAAK,CAACE,QAAN,EAAX;AACA,MAAIC,MAAM,GAAGH,KAAK,CAACI,UAAN,EAAb;AACA,MAAIC,SAAJ;AACAJ,EAAAA,IAAI,IAAIL,IAAR,GAAgBS,SAAS,GAAG,IAA5B,GAAqCA,SAAS,GAAG,IAAjD;AACAJ,EAAAA,IAAI,GAAGK,UAAU,CAACL,IAAD,EAAO,MAAP,CAAjB;AACAE,EAAAA,MAAM,GAAGG,UAAU,CAACH,MAAD,EAAS,QAAT,CAAnB;AACA,SAAUF,IAAV,SAAkBE,MAAlB,SAA4BE,SAA5B;AACD;;AAED,SAASE,SAAT,CAAmBP,KAAnB,EAA0B;AACxB,MAAIQ,GAAG,GAAGR,KAAK,CAACS,MAAN,EAAV;AACA,MAAIC,IAAI,GAAGV,KAAK,CAACW,OAAN,EAAX;AACA,MAAIC,QAAQ,GAAGZ,KAAK,CAACa,QAAN,EAAf;AACA,SAAUhB,OAAO,CAACW,GAAD,CAAjB,SAA0BE,IAA1B,SAAkCZ,KAAK,CAACc,QAAD,CAAvC;AACD;;AAED,SAASN,UAAT,CAAoBQ,CAApB,EAAuBC,IAAvB,EAA6B;AAC3B,MAAIC,CAAJ;AACAD,EAAAA,IAAI,KAAK,MAAT,IAAmBD,CAAC,GAAGlB,IAAvB,GAA+BoB,CAAC,GAAGF,CAAC,GAAG,EAAvC,GAA8CE,CAAC,GAAGF,CAAlD;;AACA,MAAIE,CAAC,GAAG,EAAR,EAAY;AACV,WAAO,MAAMA,CAAb;AACD,GAFD,MAEO;AACL,WAAOA,CAAP;AACD;AACF;;AAED,SAASC,gBAAT,CAA0Bd,MAA1B,EAAkC;AAChC,MAAIe,QAAQ,GAAG,EAAf;AACA,MAAIC,CAAC,GAAG,CAAR;;AACA,OAAKA,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAGxB,KAAK,CAACyB,MAAtB,EAA8BD,CAAC,EAA/B,EAAmC;AACjC,QAAIE,IAAI,GAAG1B,KAAK,CAACwB,CAAD,CAAL,GAAWhB,MAAtB;;AACA,QAAIkB,IAAI,GAAG,CAAP,IAAYA,IAAI,GAAGH,QAAvB,EAAiC;AAC/BA,MAAAA,QAAQ,GAAGG,IAAX;AACD;AACF;;AACD,SAAOH,QAAP;AACD;;AAED,SAASnB,SAAT,EAAoBkB,gBAApB,EAAsCV,SAAtC","sourcesContent":["const times = [30, 60];\nconst ampm = 12;\nconst weekday = [\n  \"Sunday\",\n  \"Monday\",\n  \"Tuesday\",\n  \"Wednesday\",\n  \"Thursday\",\n  \"Friday\",\n  \"Saturday\",\n];\nconst month = [\n  \"January\",\n  \"February\",\n  \"March\",\n  \"April\",\n  \"May\",\n  \"June\",\n  \"July\",\n  \"August\",\n  \"September\",\n  \"October\",\n  \"November\",\n  \"December\",\n];\n\nfunction timeToStr(today) {\n\n  let hour = today.getHours();\n  let minute = today.getMinutes();\n  let timeOfDay;\n  hour >= ampm ? (timeOfDay = \"PM\") : (timeOfDay = \"AM\");\n  hour = updateTime(hour, \"hour\");\n  minute = updateTime(minute, \"minute\");\n  return `${hour}:${minute} ${timeOfDay}`;\n}\n\nfunction dateToStr(today) {\n  let day = today.getDay();\n  let date = today.getDate();\n  let monthnum = today.getMonth();\n  return `${weekday[day]} ${date} ${month[monthnum]}`;\n}\n\nfunction updateTime(k, type) {\n  let p;\n  type === \"hour\" && k > ampm ? (p = k - 12) : (p = k);\n  if (p < 10) {\n    return \"0\" + p;\n  } else {\n    return p;\n  }\n}\n\nfunction minsToNextUpdate(minute) {\n  let min_diff = 30;\n  let i = 0;\n  for (i = 0; i < times.length; i++) {\n    let diff = times[i] - minute;\n    if (diff > 0 && diff < min_diff) {\n      min_diff = diff;\n    }\n  }\n  return min_diff;\n}\n\nexport { timeToStr, minsToNextUpdate, dateToStr };\n"]},"metadata":{},"sourceType":"module"}