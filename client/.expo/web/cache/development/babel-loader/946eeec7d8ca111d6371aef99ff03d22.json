{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/clairelivingstone/Desktop/ratio-tracker/client/DataView.js\";\n\nimport React, { useState, useEffect } from \"react\";\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-native-fontawesome\";\nimport { faCaretLeft, faCaretRight } from \"@fortawesome/free-solid-svg-icons\";\nimport { TeacherToggle } from \"./TeacherToggle.js\";\nimport UserService from \"./services/UserService\";\nimport AnimatedLoader from \"react-native-animated-loader\";\nimport { DataViewDate } from \"./DataViewDate\";\n\nvar _Dimensions$get = Dimensions.get(\"window\"),\n    height = _Dimensions$get.height;\n\nexport var DataView = function DataView(props) {\n  var _useState = useState(new Date()),\n      _useState2 = _slicedToArray(_useState, 2),\n      date = _useState2[0],\n      setDate = _useState2[1];\n\n  var scrollEnabled = screenHeight > height;\n\n  var _useState3 = useState(0),\n      _useState4 = _slicedToArray(_useState3, 2),\n      screenHeight = _useState4[0],\n      setScreenHeight = _useState4[1];\n\n  var navigation = props.navigation;\n  useEffect(function () {\n    navigation.addListener(\"focus\", function () {\n      ScreenOrientation.lockAsync(ScreenOrientation.OrientationLock.DEFAULT);\n    });\n    navigation.addListener(\"blur\", function () {\n      ScreenOrientation.lockAsync(ScreenOrientation.OrientationLock.PORTRAIT);\n    });\n  }, [navigation]);\n\n  var onContentSizeChange = function onContentSizeChange(contentWidth, contentHeight) {\n    setScreenHeight(contentHeight);\n  };\n\n  return React.createElement(ScrollView, {\n    style: {\n      flex: 1\n    },\n    onContentSizeChange: onContentSizeChange,\n    scrollEnabled: scrollEnabled,\n    contentContainerStyle: styles.scrollview,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    style: styles.container,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 11\n    }\n  }, React.createElement(View, {\n    style: styles.buttons,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 15\n    }\n  }, React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      return setDate(new Date(date) - 864e5);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 19\n    }\n  }, React.createElement(FontAwesomeIcon, {\n    icon: faCaretLeft,\n    size: 20,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 11\n    }\n  })), React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      var today = new Date();\n      var nextDay = new Date();\n      nextDay.setDate(new Date(date).getDate() + 1);\n\n      if (today - nextDay < 0) {} else {\n        setDate(nextDay);\n      }\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 19\n    }\n  }, React.createElement(FontAwesomeIcon, {\n    icon: faCaretRight,\n    size: 20,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 25\n    }\n  }))), React.createElement(DataViewDate, {\n    date: date,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 3\n    }\n  })));\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    padding: 16,\n    paddingTop: 30,\n    backgroundColor: \"#fff\"\n  },\n  head: {\n    height: 40,\n    backgroundColor: \"#f1f8ff\"\n  },\n  titleText: {\n    fontFamily: \"mainFont\",\n    fontSize: 25,\n    marginBottom: \"2%\",\n    alignSelf: \"center\"\n  },\n  lottie: {\n    width: 100,\n    height: 100\n  },\n  buttons: {\n    display: \"flex\",\n    justifyContent: \"space-between\",\n    flexDirection: \"row\",\n    alignItems: \"center\"\n  },\n  text: {\n    margin: 6\n  },\n  scrollview: {\n    flexGrow: 1\n  }\n});","map":{"version":3,"sources":["/Users/clairelivingstone/Desktop/ratio-tracker/client/DataView.js"],"names":["React","useState","useEffect","AsyncStorage","FontAwesomeIcon","faCaretLeft","faCaretRight","TeacherToggle","UserService","AnimatedLoader","DataViewDate","Dimensions","get","height","DataView","props","Date","date","setDate","scrollEnabled","screenHeight","setScreenHeight","navigation","addListener","ScreenOrientation","lockAsync","OrientationLock","DEFAULT","PORTRAIT","onContentSizeChange","contentWidth","contentHeight","flex","styles","scrollview","container","buttons","today","nextDay","getDate","StyleSheet","create","padding","paddingTop","backgroundColor","head","titleText","fontFamily","fontSize","marginBottom","alignSelf","lottie","width","display","justifyContent","flexDirection","alignItems","text","margin","flexGrow"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\nimport { StyleSheet, Text, View, Dimensions, ScrollView, TouchableOpacity } from \"react-native\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-native-fontawesome\";\nimport { faCaretLeft , faCaretRight} from \"@fortawesome/free-solid-svg-icons\";\nimport { TeacherToggle } from \"./TeacherToggle.js\";\nimport UserService from \"./services/UserService\"\nimport AnimatedLoader from \"react-native-animated-loader\";\nimport {DataViewDate} from \"./DataViewDate\";\n\nconst { height } = Dimensions.get(\"window\");\n\nexport const DataView = (props) => {\n    const [date, setDate] = useState(new Date());\n    const scrollEnabled = screenHeight > height;\n    const [screenHeight, setScreenHeight] = useState(0);\n\n    const navigation = props.navigation;\n\n    useEffect(() => {\n      navigation.addListener(\"focus\", () => {\n        ScreenOrientation.lockAsync(ScreenOrientation.OrientationLock.DEFAULT);\n      });\n  \n      navigation.addListener(\"blur\", () => {\n        ScreenOrientation.lockAsync(ScreenOrientation.OrientationLock.PORTRAIT);\n      });\n    }, [navigation]);\n    \n    const onContentSizeChange = (contentWidth, contentHeight) => {\n    setScreenHeight(contentHeight);\n    };\n\n    return(\n\n\n        <ScrollView\n        style={{ flex: 1 }}\n        onContentSizeChange={onContentSizeChange}\n        scrollEnabled={scrollEnabled}\n        contentContainerStyle={styles.scrollview}\n      >\n          <View style={styles.container}>\n              <View style={styles.buttons}>\n                  <TouchableOpacity onPress={()=>setDate(new Date(date) - 864e5)}>\n          <FontAwesomeIcon\n                  icon={faCaretLeft}\n                  size={20} />\n                  </TouchableOpacity>\n                  <TouchableOpacity onPress={()=>{\n                      let today = new Date()\n                      let nextDay = new Date()\n                      nextDay.setDate(new Date(date).getDate()+1)\n                      if ((today-nextDay) < 0) {\n                      }\n                      else {\n                          setDate(nextDay)\n                      }\n                  }}>\n                        <FontAwesomeIcon\n                  icon={faCaretRight}\n                  size={20}\n                />\n                </TouchableOpacity>\n  \n  </View>\n  <DataViewDate date={date}/>\n  </View>\n\n\n      </ScrollView>\n\n\n\n\n\n\n\n    )\n}\n\n\nconst styles = StyleSheet.create({\n    container: { flex: 1, padding: 16, paddingTop: 30, backgroundColor: \"#fff\"},\n    head: { height: 40, backgroundColor: \"#f1f8ff\" },\n    titleText: {\n      fontFamily: \"mainFont\",\n      fontSize: 25,\n      marginBottom: \"2%\",\n      alignSelf: \"center\",\n    },\n    lottie: {\n      width: 100,\n      height: 100\n    },\n    buttons: {\n        display: \"flex\", \n        justifyContent: \"space-between\",\n        flexDirection: \"row\",\n        alignItems: \"center\" \n    },\n    text: { \n      margin: 6 },\n    scrollview: {\n      flexGrow: 1,\n    },\n  });\n  \n\n"]},"metadata":{},"sourceType":"module"}