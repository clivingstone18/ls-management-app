{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/Users/clairelivingstone/Desktop/ratio-tracker/client/DataChart.js\";\n\nimport React from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport { LineChart, BarChart, PieChart, ProgressChart, ContributionGraph, StackedBarChart } from \"react-native-chart-kit\";\nvar screenWidth = Dimensions.get(\"window\").width;\nexport var DataChart = function DataChart(props) {\n  console.log(props.y);\n\n  if (!props.y.length) {\n    return React.createElement(View, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 18\n      }\n    }, React.createElement(Text, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 24\n      }\n    }, \"HI\"));\n  }\n\n  if (props.y.length) {\n    return React.createElement(View, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 5\n      }\n    }, React.createElement(LineChart, {\n      data: {\n        labels: props.x,\n        datasets: [{\n          data: props.y\n        }]\n      },\n      width: screenWidth,\n      height: 220,\n      verticalLabelRotation: -70,\n      yAxisInterval: 1,\n      chartConfig: chartConfig,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 5\n      }\n    }));\n  }\n};\nvar chartConfig = {\n  backgroundGradientFrom: \"#1E2923\",\n  backgroundGradientFromOpacity: 0,\n  backgroundGradientTo: \"#08130D\",\n  backgroundGradientToOpacity: 0.2,\n  decimalPlaces: 0,\n  color: function color() {\n    var opacity = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;\n    return \"rgba(0, 0, 255, \" + opacity + \")\";\n  },\n  strokeWidth: 2,\n  barPercentage: 0.5,\n  useShadowColorFromDataset: false\n};","map":{"version":3,"sources":["/Users/clairelivingstone/Desktop/ratio-tracker/client/DataChart.js"],"names":["React","LineChart","BarChart","PieChart","ProgressChart","ContributionGraph","StackedBarChart","screenWidth","Dimensions","get","width","DataChart","props","console","log","y","length","labels","x","datasets","data","chartConfig","backgroundGradientFrom","backgroundGradientFromOpacity","backgroundGradientTo","backgroundGradientToOpacity","decimalPlaces","color","opacity","strokeWidth","barPercentage","useShadowColorFromDataset"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;;;;AAQA,SACIC,SADJ,EAEIC,QAFJ,EAGIC,QAHJ,EAIIC,aAJJ,EAKIC,iBALJ,EAMIC,eANJ,QAOS,wBAPT;AASE,IAAMC,WAAW,GAAGC,UAAU,CAACC,GAAX,CAAe,QAAf,EAAyBC,KAA7C;AAEA,OAAO,IAAMC,SAAS,GAAG,SAAZA,SAAY,CAACC,KAAD,EAAW;AAChCC,EAAAA,OAAO,CAACC,GAAR,CAAYF,KAAK,CAACG,CAAlB;;AACA,MAAI,CAACH,KAAK,CAACG,CAAN,CAAQC,MAAb,EAAqB;AACjB,WAAO,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAM,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAN,CAAP;AACH;;AACD,MAAIJ,KAAK,CAACG,CAAN,CAAQC,MAAZ,EAAoB;AACpB,WACF,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA,oBAAC,SAAD;AACE,MAAA,IAAI,EAAE;AACJC,QAAAA,MAAM,EAAEL,KAAK,CAACM,CADV;AAEJC,QAAAA,QAAQ,EAAE,CACR;AACEC,UAAAA,IAAI,EAAER,KAAK,CAACG;AADd,SADQ;AAFN,OADR;AASE,MAAA,KAAK,EAAER,WATT;AAUE,MAAA,MAAM,EAAE,GAVV;AAWE,MAAA,qBAAqB,EAAE,CAAC,EAX1B;AAaE,MAAA,aAAa,EAAE,CAbjB;AAcE,MAAA,WAAW,EAAEc,WAdf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADA,CADE;AAoBE;AACH,CA3BI;AA6BL,IAAMA,WAAW,GAAG;AAChBC,EAAAA,sBAAsB,EAAE,SADR;AAEhBC,EAAAA,6BAA6B,EAAE,CAFf;AAGhBC,EAAAA,oBAAoB,EAAE,SAHN;AAIhBC,EAAAA,2BAA2B,EAAE,GAJb;AAKhBC,EAAAA,aAAa,EAAE,CALC;AAMhBC,EAAAA,KAAK,EAAE;AAAA,QAACC,OAAD,uEAAW,CAAX;AAAA,gCAAoCA,OAApC;AAAA,GANS;AAOhBC,EAAAA,WAAW,EAAE,CAPG;AAQhBC,EAAAA,aAAa,EAAE,GARC;AAShBC,EAAAA,yBAAyB,EAAE;AATX,CAApB","sourcesContent":["import React from \"react\";\nimport {\n    StyleSheet,\n    Button,\n    View,\n    Dimensions,\n    Text,\n  } from \"react-native\";\nimport {\n    LineChart,\n    BarChart,\n    PieChart,\n    ProgressChart,\n    ContributionGraph,\n    StackedBarChart\n  } from \"react-native-chart-kit\";\n\n  const screenWidth = Dimensions.get(\"window\").width;\n\n  export const DataChart = (props) => {\n      console.log(props.y);\n      if (!props.y.length) {\n          return <View><Text>HI</Text></View>\n      }\n      if (props.y.length) {\n      return(\n    <View>\n    <LineChart\n      data={{\n        labels: props.x,\n        datasets: [\n          {\n            data: props.y\n          }\n        ]\n      }}\n      width={screenWidth} // from react-native\n      height={220}\n      verticalLabelRotation={-70}\n\n      yAxisInterval={1} // optional, defaults to 1\n      chartConfig={chartConfig}\n    />\n  </View>\n      \n      )}\n    }\n\n    const chartConfig = {\n        backgroundGradientFrom: \"#1E2923\",\n        backgroundGradientFromOpacity: 0,\n        backgroundGradientTo: \"#08130D\",\n        backgroundGradientToOpacity: 0.2,\n        decimalPlaces: 0,\n        color: (opacity = 1) => `rgba(0, 0, 255, ${opacity})`,\n        strokeWidth: 2, // optional, default 3\n        barPercentage: 0.5,\n        useShadowColorFromDataset: false // optional\n      };"]},"metadata":{},"sourceType":"module"}