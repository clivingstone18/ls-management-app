{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport * as Print from \"expo-print\";\nimport moment from \"moment\";\nexport var print = function print(info, date) {\n  return _regeneratorRuntime.async(function print$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          return _context.abrupt(\"return\", new Promise(function (resolve, reject) {\n            var headers = [\"Time\", \"# Nursery\", \"# Kooka\", \"# Emus\", \"# Kanga\", \"# Children\", \"# Staff\", \"# Staff req\", \"Staff initials\"];\n\n            var getInfoAsStr = function getInfoAsStr(info) {\n              var time = info[0];\n              var nursery = info[1];\n              var kookaburras = info[2];\n              var emus = info[3];\n              var kangaroos = info[4];\n              var numChildren = info[5];\n              var numStaff = info[8].split(\"\\n\").length;\n              var staffRequired = info[7];\n              var staffNames = info[8].split(\"\\n\").join(\", \");\n              return \"<td>\" + time + \"</td>\\n      <td>\" + nursery + \"</td>\\n      <td>\" + kookaburras + \"</td>\\n      <td>\" + emus + \"</td>\\n      <td>\" + kangaroos + \"</td>\\n      <td>\" + numChildren + \"</td>\\n      <td>\" + numStaff + \"</td>\\n      <td>\" + staffRequired + \"</td>\\n      <td>\" + staffNames + \"</td>\";\n            };\n\n            var _Print$selectPrinterA = Print.selectPrinterAsync().catch(function (e) {\n              return console.log(\"fail\");\n            }),\n                printerName = _Print$selectPrinterA.printerName,\n                printerUrl = _Print$selectPrinterA.printerUrl;\n\n            var html = \"<style> body {font-family:Helvetica;} img {height: 50px; width: 250px}</style><body><img alt=\" + 'kindylogo\" src=\"https://2syco449tvc32lbc983jscyx-wpengine.netdna-ssl.com/wp-content/uploads/2018/11/little-scribblers-logo.svg\"/>' + \"<br>\" + \"<h2>Ratio Check for \" + moment(date).format(\"dddd, MMMM Do YYYY\") + \"</h2><table><thead><tr>\" + headers.map(function (header) {\n              return \"<th>\" + header + \"</th>\";\n            }).join(\"\") + \"</tr></thead><tbody>\" + info.map(function (element) {\n              return \"<tr>\" + getInfoAsStr(element) + \"</tr>\";\n            }).join(\"\") + \"</tbody></table></body>\";\n\n            var _Print$printToFileAsy = Print.printToFileAsync({\n              html: html,\n              width: 612,\n              height: 792,\n              base64: true\n            }),\n                pdfURI = _Print$printToFileAsy.pdfURI,\n                numPages = _Print$printToFileAsy.numPages,\n                base64 = _Print$printToFileAsy.base64;\n\n            try {\n              var printedFile = Print.printAsync({\n                uri: pdfURI,\n                html: html,\n                width: 612,\n                height: 792,\n                printerUrl: printerUrl,\n                orientation: Print.Orientation.portrait\n              });\n              console.log(printedFile);\n              resolve(printedFile);\n            } catch (err) {\n              reject(err);\n            }\n          }));\n\n        case 1:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};","map":{"version":3,"sources":["/Users/clairelivingstone/Desktop/ratio-tracker/client/print.js"],"names":["Print","moment","print","info","date","Promise","resolve","reject","headers","getInfoAsStr","time","nursery","kookaburras","emus","kangaroos","numChildren","numStaff","split","length","staffRequired","staffNames","join","selectPrinterAsync","catch","e","console","log","printerName","printerUrl","html","format","map","header","element","printToFileAsync","width","height","base64","pdfURI","numPages","printedFile","printAsync","uri","orientation","Orientation","portrait","err"],"mappings":";AAAA,OAAO,KAAKA,KAAZ,MAAuB,YAAvB;AACA,OAAOC,MAAP,MAAmB,QAAnB;AACA,OAAO,IAAMC,KAAK,GAAG,SAARA,KAAQ,CAAOC,IAAP,EAAaC,IAAb;AAAA;AAAA;AAAA;AAAA;AAAA,2CACZ,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAsB;AACzC,gBAAMC,OAAO,GAAG,CACd,MADc,EAEd,WAFc,EAGd,SAHc,EAId,QAJc,EAKd,SALc,EAMd,YANc,EAOd,SAPc,EAQd,aARc,EASd,gBATc,CAAhB;;AAYA,gBAAMC,YAAY,GAAG,SAAfA,YAAe,CAACN,IAAD,EAAU;AAC7B,kBAAIO,IAAI,GAAGP,IAAI,CAAC,CAAD,CAAf;AACA,kBAAIQ,OAAO,GAAGR,IAAI,CAAC,CAAD,CAAlB;AACA,kBAAIS,WAAW,GAAGT,IAAI,CAAC,CAAD,CAAtB;AACA,kBAAIU,IAAI,GAAGV,IAAI,CAAC,CAAD,CAAf;AACA,kBAAIW,SAAS,GAAGX,IAAI,CAAC,CAAD,CAApB;AACA,kBAAIY,WAAW,GAAGZ,IAAI,CAAC,CAAD,CAAtB;AACA,kBAAIa,QAAQ,GAAGb,IAAI,CAAC,CAAD,CAAJ,CAAQc,KAAR,CAAc,IAAd,EAAoBC,MAAnC;AACA,kBAAIC,aAAa,GAAGhB,IAAI,CAAC,CAAD,CAAxB;AACA,kBAAIiB,UAAU,GAAGjB,IAAI,CAAC,CAAD,CAAJ,CAAQc,KAAR,CAAc,IAAd,EAAoBI,IAApB,CAAyB,IAAzB,CAAjB;AAEA,8BAAcX,IAAd,yBACQC,OADR,yBAEQC,WAFR,yBAGQC,IAHR,yBAIQC,SAJR,yBAKQC,WALR,yBAMQC,QANR,yBAOQG,aAPR,yBAQQC,UARR;AASD,aApBD;;AAbyC,wCAmCPpB,KAAK,CAACsB,kBAAN,GAA2BC,KAA3B,CAAiC,UAACC,CAAD;AAAA,qBACjEC,OAAO,CAACC,GAAR,CAAY,MAAZ,CADiE;AAAA,aAAjC,CAnCO;AAAA,gBAmCnCC,WAnCmC,yBAmCnCA,WAnCmC;AAAA,gBAmCtBC,UAnCsB,yBAmCtBA,UAnCsB;;AAuCzC,gBAAIC,IAAI,GACN,kGACA,mIADA,GAEA,MAFA,GAGA,sBAHA,GAIA5B,MAAM,CAACG,IAAD,CAAN,CAAa0B,MAAb,CAAoB,oBAApB,CAJA,GAKA,yBALA,GAMAtB,OAAO,CAACuB,GAAR,CAAY,UAACC,MAAD;AAAA,qBAAY,SAASA,MAAT,GAAkB,OAA9B;AAAA,aAAZ,EAAmDX,IAAnD,CAAwD,EAAxD,CANA,GAOA,sBAPA,GAQAlB,IAAI,CAAC4B,GAAL,CAAS,UAACE,OAAD;AAAA,qBAAa,SAASxB,YAAY,CAACwB,OAAD,CAArB,GAAiC,OAA9C;AAAA,aAAT,EAAgEZ,IAAhE,CAAqE,EAArE,CARA,GASA,yBAVF;;AAvCyC,wCAkDNrB,KAAK,CAACkC,gBAAN,CAAuB;AACxDL,cAAAA,IAAI,EAAEA,IADkD;AAExDM,cAAAA,KAAK,EAAE,GAFiD;AAGxDC,cAAAA,MAAM,EAAE,GAHgD;AAIxDC,cAAAA,MAAM,EAAE;AAJgD,aAAvB,CAlDM;AAAA,gBAkDnCC,MAlDmC,yBAkDnCA,MAlDmC;AAAA,gBAkD3BC,QAlD2B,yBAkD3BA,QAlD2B;AAAA,gBAkDjBF,MAlDiB,yBAkDjBA,MAlDiB;;AAyDzC,gBAAI;AACF,kBAAIG,WAAW,GAAGxC,KAAK,CAACyC,UAAN,CAAiB;AACjCC,gBAAAA,GAAG,EAAEJ,MAD4B;AAEjCT,gBAAAA,IAAI,EAAEA,IAF2B;AAGjCM,gBAAAA,KAAK,EAAE,GAH0B;AAIjCC,gBAAAA,MAAM,EAAE,GAJyB;AAKjCR,gBAAAA,UAAU,EAAEA,UALqB;AAMjCe,gBAAAA,WAAW,EAAE3C,KAAK,CAAC4C,WAAN,CAAkBC;AANE,eAAjB,CAAlB;AAQApB,cAAAA,OAAO,CAACC,GAAR,CAAYc,WAAZ;AACAlC,cAAAA,OAAO,CAACkC,WAAD,CAAP;AACD,aAXD,CAYA,OAAOM,GAAP,EAAY;AACVvC,cAAAA,MAAM,CAACuC,GAAD,CAAN;AACD;AACF,WAxEQ,CADY;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAd","sourcesContent":["import * as Print from \"expo-print\";\nimport moment from \"moment\"\nexport const print = async (info, date) => {\n  return new Promise((resolve, reject) =>  {\n  const headers = [\n    \"Time\",\n    \"# Nursery\",\n    \"# Kooka\",\n    \"# Emus\",\n    \"# Kanga\",\n    \"# Children\",\n    \"# Staff\",\n    \"# Staff req\",\n    \"Staff initials\",\n  ];\n\n  const getInfoAsStr = (info) => {\n    let time = info[0]\n    let nursery = info[1];\n    let kookaburras = info[2];\n    let emus = info[3];\n    let kangaroos = info[4];\n    let numChildren = info[5]\n    let numStaff = info[8].split(\"\\n\").length\n    let staffRequired = info[7]\n    let staffNames = info[8].split(\"\\n\").join(\", \")\n\n    return `<td>${time}</td>\n      <td>${nursery}</td>\n      <td>${kookaburras}</td>\n      <td>${emus}</td>\n      <td>${kangaroos}</td>\n      <td>${numChildren}</td>\n      <td>${numStaff}</td>\n      <td>${staffRequired}</td>\n      <td>${staffNames}</td>`;\n  };\n\n  let { printerName, printerUrl } = Print.selectPrinterAsync().catch((e) =>\n    console.log(\"fail\")\n  );\n\n  let html =\n    \"<style> body {font-family:Helvetica;} img {height: 50px; width: 250px}</style><body><img alt=\" +\n    'kindylogo\" src=\"https://2syco449tvc32lbc983jscyx-wpengine.netdna-ssl.com/wp-content/uploads/2018/11/little-scribblers-logo.svg\"/>' +\n    \"<br>\" +\n    \"<h2>Ratio Check for \" +\n    moment(date).format(\"dddd, MMMM Do YYYY\") +\n    \"</h2><table><thead><tr>\" +\n    headers.map((header) => \"<th>\" + header + \"</th>\").join(\"\") +\n    \"</tr></thead><tbody>\" +\n    info.map((element) => \"<tr>\" + getInfoAsStr(element) + \"</tr>\").join(\"\") +\n    \"</tbody></table></body>\";\n  let { pdfURI, numPages, base64 } = Print.printToFileAsync({\n    html: html,\n    width: 612,\n    height: 792,\n    base64: true,\n  });\n\n  try {\n    let printedFile = Print.printAsync({\n      uri: pdfURI,\n      html: html,\n      width: 612,\n      height: 792,\n      printerUrl: printerUrl,\n      orientation: Print.Orientation.portrait,\n    });\n    console.log(printedFile)\n    resolve(printedFile)\n  }\n  catch (err) {\n    reject(err)\n  }\n})\n}"]},"metadata":{},"sourceType":"module"}