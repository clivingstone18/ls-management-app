{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/Users/clairelivingstone/Desktop/ratio-tracker/client/DataChart.js\";\n\nimport React from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport { LineChart, BarChart, PieChart, ProgressChart, ContributionGraph, StackedBarChart } from \"react-native-chart-kit\";\nvar screenWidth = Dimensions.get(\"window\").width * 0.9;\nvar screenHeight = Dimensions.get(\"window\").height * 0.7;\nexport var DataChart = function DataChart(props) {\n  if (!props.y.length) {\n    return React.createElement(View, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 18\n      }\n    }, React.createElement(Text, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 24\n      }\n    }, \"HI\"));\n  }\n\n  if (props.y.length) {\n    return React.createElement(View, {\n      style: {\n        padding: \"1%\",\n        marginTop: \"-5%\"\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 11\n      }\n    }, React.createElement(LineChart, {\n      data: {\n        labels: props.x,\n        datasets: [{\n          data: props.y\n        }]\n      },\n      width: screenWidth,\n      height: screenHeight,\n      verticalLabelRotation: -35,\n      fromZero: true,\n      xLabelsOffset: 50,\n      yAxisInterval: \"10\",\n      chartConfig: chartConfig,\n      style: {\n        marginVertical: 8,\n        borderRadius: 16\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 5\n      }\n    }));\n  }\n};\nvar chartConfig = {\n  backgroundColor: \"gray\",\n  backgroundGradientFrom: \"navy\",\n  backgroundGradientTo: \"navy\",\n  decimalPlaces: 0,\n  color: function color() {\n    var opacity = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;\n    return \"rgba(255, 255, 255, \" + opacity + \")\";\n  },\n  labelColor: function labelColor() {\n    var opacity = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;\n    return \"rgba(255, 255, 255, \" + opacity + \")\";\n  },\n  style: {\n    borderRadius: 16\n  },\n  propsForDots: {\n    r: \"6\",\n    strokeWidth: \"2\",\n    stroke: \"gray\"\n  }\n};","map":{"version":3,"sources":["/Users/clairelivingstone/Desktop/ratio-tracker/client/DataChart.js"],"names":["React","LineChart","BarChart","PieChart","ProgressChart","ContributionGraph","StackedBarChart","screenWidth","Dimensions","get","width","screenHeight","height","DataChart","props","y","length","padding","marginTop","labels","x","datasets","data","chartConfig","marginVertical","borderRadius","backgroundColor","backgroundGradientFrom","backgroundGradientTo","decimalPlaces","color","opacity","labelColor","style","propsForDots","r","strokeWidth","stroke"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;;;;AAQA,SACIC,SADJ,EAEIC,QAFJ,EAGIC,QAHJ,EAIIC,aAJJ,EAKIC,iBALJ,EAMIC,eANJ,QAOS,wBAPT;AASE,IAAMC,WAAW,GAAGC,UAAU,CAACC,GAAX,CAAe,QAAf,EAAyBC,KAAzB,GAAiC,GAArD;AACA,IAAMC,YAAY,GAAGH,UAAU,CAACC,GAAX,CAAe,QAAf,EAAyBG,MAAzB,GAAkC,GAAvD;AAEA,OAAO,IAAMC,SAAS,GAAG,SAAZA,SAAY,CAACC,KAAD,EAAW;AAChC,MAAI,CAACA,KAAK,CAACC,CAAN,CAAQC,MAAb,EAAqB;AACjB,WAAO,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAM,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAN,CAAP;AACH;;AACD,MAAIF,KAAK,CAACC,CAAN,CAAQC,MAAZ,EAAoB;AACpB,WACI,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAE;AAACC,QAAAA,OAAO,EAAE,IAAV;AAAgBC,QAAAA,SAAS,EAAE;AAA3B,OAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEN,oBAAC,SAAD;AACE,MAAA,IAAI,EAAE;AACJC,QAAAA,MAAM,EAAEL,KAAK,CAACM,CADV;AAEJC,QAAAA,QAAQ,EAAE,CACR;AACEC,UAAAA,IAAI,EAAER,KAAK,CAACC;AADd,SADQ;AAFN,OADR;AASE,MAAA,KAAK,EAAER,WATT;AAUE,MAAA,MAAM,EAAEI,YAVV;AAWE,MAAA,qBAAqB,EAAE,CAAC,EAX1B;AAYE,MAAA,QAAQ,EAAE,IAZZ;AAaE,MAAA,aAAa,EAAE,EAbjB;AAcE,MAAA,aAAa,EAAE,IAdjB;AAeE,MAAA,WAAW,EAAEY,WAff;AAgBE,MAAA,KAAK,EAAE;AACLC,QAAAA,cAAc,EAAE,CADX;AAELC,QAAAA,YAAY,EAAE;AAFT,OAhBT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFM,CADJ;AA0BE;AACH,CAhCI;AAkCL,IAAMF,WAAW,GAAG;AAChBG,EAAAA,eAAe,EAAE,MADD;AAEhBC,EAAAA,sBAAsB,EAAE,MAFR;AAGhBC,EAAAA,oBAAoB,EAAE,MAHN;AAIhBC,EAAAA,aAAa,EAAE,CAJC;AAKhBC,EAAAA,KAAK,EAAE;AAAA,QAACC,OAAD,uEAAW,CAAX;AAAA,oCAAwCA,OAAxC;AAAA,GALS;AAMhBC,EAAAA,UAAU,EAAE;AAAA,QAACD,OAAD,uEAAW,CAAX;AAAA,oCAAwCA,OAAxC;AAAA,GANI;AAOhBE,EAAAA,KAAK,EAAE;AACHR,IAAAA,YAAY,EAAE;AADX,GAPS;AAUhBS,EAAAA,YAAY,EAAE;AACZC,IAAAA,CAAC,EAAE,GADS;AAEZC,IAAAA,WAAW,EAAE,GAFD;AAGZC,IAAAA,MAAM,EAAE;AAHI;AAVE,CAApB","sourcesContent":["import React from \"react\";\nimport {\n    StyleSheet,\n    Button,\n    View,\n    Dimensions,\n    Text,\n  } from \"react-native\";\nimport {\n    LineChart,\n    BarChart,\n    PieChart,\n    ProgressChart,\n    ContributionGraph,\n    StackedBarChart\n  } from \"react-native-chart-kit\";\n\n  const screenWidth = Dimensions.get(\"window\").width * 0.9;\n  const screenHeight = Dimensions.get(\"window\").height * 0.7;\n\n  export const DataChart = (props) => {\n      if (!props.y.length) {\n          return <View><Text>HI</Text></View>\n      }\n      if (props.y.length) {\n      return(\n          <View style={{padding: \"1%\", marginTop: \"-5%\"}}>\n\n    <LineChart\n      data={{\n        labels: props.x,\n        datasets: [\n          {\n            data: props.y\n          }\n        ]\n      }}\n      width={screenWidth} // from react-native\n      height={screenHeight}\n      verticalLabelRotation={-35}\n      fromZero={true}\n      xLabelsOffset={50}\n      yAxisInterval={\"10\"} // optional, defaults to 1\n      chartConfig={chartConfig}\n      style={{\n        marginVertical: 8,\n        borderRadius: 16,\n      }}\n    />\n  </View>\n      \n      )}\n    }\n\n    const chartConfig = {\n        backgroundColor: \"gray\",\n        backgroundGradientFrom: \"navy\",\n        backgroundGradientTo: \"navy\",\n        decimalPlaces: 0, // optional, defaults to 2dp\n        color: (opacity = 1) => `rgba(255, 255, 255, ${opacity})`,\n        labelColor: (opacity = 1) => `rgba(255, 255, 255, ${opacity})`,\n        style: {\n            borderRadius: 16,\n          },\n        propsForDots: {\n          r: \"6\",\n          strokeWidth: \"2\",\n          stroke: \"gray\"\n        }\n      };"]},"metadata":{},"sourceType":"module"}