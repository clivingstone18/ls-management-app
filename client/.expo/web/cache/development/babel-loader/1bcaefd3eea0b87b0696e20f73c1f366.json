{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/clairelivingstone/Desktop/ratio-tracker/client/DateSheetTimeChanger.js\";\n\nimport React, { useState } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport { PrintSheet } from \"./PrintSheet\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-native-fontawesome\";\nimport { faCaretLeft, faCaretRight } from \"@fortawesome/free-solid-svg-icons\";\nimport { TouchableOpacity } from \"react-native-gesture-handler\";\nimport moment from \"moment\";\n\nvar _Dimensions$get = Dimensions.get(\"window\"),\n    height = _Dimensions$get.height;\n\nexport var DateSheetTimeChanger = function DateSheetTimeChanger() {\n  var _useState = useState(new Date()),\n      _useState2 = _slicedToArray(_useState, 2),\n      date = _useState2[0],\n      setDate = _useState2[1];\n\n  var _useState3 = useState(0),\n      _useState4 = _slicedToArray(_useState3, 2),\n      screenHeight = _useState4[0],\n      setScreenHeight = _useState4[1];\n\n  var scrollEnabled = screenHeight > height;\n\n  var onContentSizeChange = function onContentSizeChange(contentWidth, contentHeight) {\n    setScreenHeight(contentHeight);\n  };\n\n  return React.createElement(ScrollView, {\n    style: {\n      flex: 1\n    },\n    onContentSizeChange: onContentSizeChange,\n    scrollEnabled: scrollEnabled,\n    contentContainerStyle: styles.scrollview,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    style: styles.container,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    style: styles.buttons,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }\n  }, React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      return setDate(new Date(date) - 864e5);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 17\n    }\n  }, React.createElement(FontAwesomeIcon, {\n    icon: faCaretLeft,\n    size: 20,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }\n  })), React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      var today = new Date();\n      var nextDay = new Date();\n      nextDay.setDate(new Date(date).getDate() + 1);\n\n      if (today - nextDay < 0) {} else {\n        setDate(nextDay);\n      }\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 17\n    }\n  }, React.createElement(FontAwesomeIcon, {\n    icon: faCaretRight,\n    size: 20,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 23\n    }\n  }))), React.createElement(PrintSheet, {\n    currDate: date,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }\n  })));\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    padding: 16,\n    paddingTop: 30,\n    backgroundColor: \"#fff\"\n  },\n  head: {\n    height: 40,\n    backgroundColor: \"#f1f8ff\"\n  },\n  titleText: {\n    fontFamily: \"mainFont\",\n    fontSize: 25,\n    marginBottom: \"2%\",\n    alignSelf: \"center\"\n  },\n  lottie: {\n    width: 100,\n    height: 100\n  },\n  buttons: {\n    display: \"flex\",\n    justifyContent: \"space-between\",\n    flexDirection: \"row\"\n  },\n  text: {\n    margin: 6\n  },\n  scrollview: {\n    flexGrow: 1\n  }\n});","map":{"version":3,"sources":["/Users/clairelivingstone/Desktop/ratio-tracker/client/DateSheetTimeChanger.js"],"names":["React","useState","PrintSheet","FontAwesomeIcon","faCaretLeft","faCaretRight","TouchableOpacity","moment","Dimensions","get","height","DateSheetTimeChanger","Date","date","setDate","screenHeight","setScreenHeight","scrollEnabled","onContentSizeChange","contentWidth","contentHeight","flex","styles","scrollview","container","buttons","today","nextDay","getDate","StyleSheet","create","padding","paddingTop","backgroundColor","head","titleText","fontFamily","fontSize","marginBottom","alignSelf","lottie","width","display","justifyContent","flexDirection","text","margin","flexGrow"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { StyleSheet, View, Dimensions, ScrollView, Text } from \"react-native\";\nimport {PrintSheet} from \"./PrintSheet\"\nimport { FontAwesomeIcon } from \"@fortawesome/react-native-fontawesome\";\nimport { faCaretLeft , faCaretRight} from \"@fortawesome/free-solid-svg-icons\";\nimport { TouchableOpacity } from \"react-native-gesture-handler\";\nimport moment from \"moment\"\nconst { height } = Dimensions.get(\"window\");\n\nexport const DateSheetTimeChanger = () => {\n  const [date, setDate] = useState(new Date());\n  const [screenHeight, setScreenHeight] = useState(0);\n  const scrollEnabled = screenHeight > height;\n\nconst onContentSizeChange = (contentWidth, contentHeight) => {\n    setScreenHeight(contentHeight);\n  };\n\n  return (\n    <ScrollView\n      style={{ flex: 1 }}\n      onContentSizeChange={onContentSizeChange}\n      scrollEnabled={scrollEnabled}\n      contentContainerStyle={styles.scrollview}\n    >\n        <View style={styles.container}>\n            <View style={styles.buttons}>\n                <TouchableOpacity onPress={()=>setDate(new Date(date) - 864e5)}>\n        <FontAwesomeIcon\n                icon={faCaretLeft}\n                size={20} />\n                </TouchableOpacity>\n                <TouchableOpacity onPress={()=>{\n                    let today = new Date()\n                    let nextDay = new Date()\n                    nextDay.setDate(new Date(date).getDate()+1)\n                    if ((today-nextDay) < 0) {\n                    }\n                    else {\n                        setDate(nextDay)\n                    }\n                }}>\n                      <FontAwesomeIcon\n                icon={faCaretRight}\n                size={20}\n              />\n              </TouchableOpacity>\n\n</View>\n        <PrintSheet currDate={date} />\n        </View>\n    </ScrollView>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: { flex: 1, padding: 16, paddingTop: 30, backgroundColor: \"#fff\" },\n  head: { height: 40, backgroundColor: \"#f1f8ff\" },\n  titleText: {\n    fontFamily: \"mainFont\",\n    fontSize: 25,\n    marginBottom: \"2%\",\n    alignSelf: \"center\",\n  },\n  lottie: {\n    width: 100,\n    height: 100\n  },\n  buttons: {\n      display: \"flex\", \n      justifyContent: \"space-between\",\n      flexDirection: \"row\"\n  },\n  text: { margin: 6 },\n  scrollview: {\n    flexGrow: 1,\n  },\n});\n"]},"metadata":{},"sourceType":"module"}