{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/clairelivingstone/Desktop/ratio-tracker/client/DataViewDate.js\";\n\nimport React, { useState, useEffect } from \"react\";\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport UserService from \"./services/UserService\";\nimport moment from \"moment\";\nimport { LineChart } from \"lineChart\";\nexport var DataViewDate = function DataViewDate(props) {\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      loading = _useState2[0],\n      setLoading = _useState2[1];\n\n  useEffect(function () {\n    setLoading(true);\n    var date = moment(props.date).format(\"YYYY-MM-DD\");\n    UserService.getClassDataOnDate(date).then(function (res) {\n      var info = res.data[0].rows;\n      var processedInfo = info.map(function (i) {\n        return {\n          time: moment(i.timeof, \"HH:mm:ss\").format(\"hh:mm A\"),\n          numChildren: i.numemu + i.numkang + i.numkoala + i.numkook\n        };\n      });\n      console.log(processedInfo);\n      console.log(\"WEEE\");\n    }).catch(function (err) {\n      return console.log(err);\n    });\n  }, [props]);\n  return React.createElement(View, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 8\n    }\n  }, React.createElement(Text, {\n    style: styles.titleText,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 5\n    }\n  }, \"Data for \", moment(props.date).format(\"dddd, MMMM Do YYYY\")), React.createElement(LineChart, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 1\n    }\n  }), React.createElement(View, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 1\n    }\n  }));\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#f3f3f3\",\n    justifyContent: \"space-around\",\n    paddingLeft: \"2%\",\n    paddingRight: \"2%\",\n    paddingTop: \"3%\"\n  },\n  titleText: {\n    fontFamily: \"mainFont\",\n    fontSize: 25,\n    marginBottom: \"2%\",\n    alignSelf: \"center\"\n  },\n  lottie: {\n    width: 100,\n    height: 100\n  },\n  topPanel: {\n    flex: 0.15,\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    paddingLeft: \"2%\"\n  },\n  text: {\n    fontFamily: \"mainFont\",\n    fontSize: 30,\n    marginBottom: \"5%\"\n  },\n  stat: {\n    flex: 1,\n    flexDirection: \"column\",\n    fontFamily: \"mainFont\"\n  },\n  widget: {\n    backgroundColor: \"#f8f8f8\",\n    width: \"30%\",\n    height: \"100%\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    textAlign: \"center\",\n    backgroundColor: \"white\",\n    borderRadius: 40,\n    shadowColor: \"#000\",\n    shadowOffset: {\n      width: 0,\n      height: 12\n    },\n    marginBottom: \"5%\",\n    shadowOpacity: 0.58,\n    shadowRadius: 16.0,\n    paddingLeft: \"2%\",\n    elevation: 24\n  }\n});","map":{"version":3,"sources":["/Users/clairelivingstone/Desktop/ratio-tracker/client/DataViewDate.js"],"names":["React","useState","useEffect","AsyncStorage","UserService","moment","LineChart","DataViewDate","props","loading","setLoading","date","format","getClassDataOnDate","then","res","info","data","rows","processedInfo","map","i","time","timeof","numChildren","numemu","numkang","numkoala","numkook","console","log","catch","err","styles","titleText","StyleSheet","create","container","flex","backgroundColor","justifyContent","paddingLeft","paddingRight","paddingTop","fontFamily","fontSize","marginBottom","alignSelf","lottie","width","height","topPanel","flexDirection","text","stat","widget","alignItems","textAlign","borderRadius","shadowColor","shadowOffset","shadowOpacity","shadowRadius","elevation"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\nimport {\n  StyleSheet,\n  Button,\n  View,\n  Text,\n} from \"react-native\";\nimport UserService from \"./services/UserService\"\nimport moment from \"moment\"\nimport {LineChart} from \"lineChart\"\nexport const DataViewDate = (props) => { \n    const [loading, setLoading] = useState(false)\n\n  useEffect(() => {\n    setLoading(true)\n    // api call to get most recent \n    let date = moment(props.date).format(\"YYYY-MM-DD\")\n    UserService.getClassDataOnDate(date).then(res=>{\n        let info = res.data[0].rows\n        let processedInfo = info.map(i => {return {time: moment(i.timeof, \"HH:mm:ss\").format(\"hh:mm A\"), numChildren: i.numemu+i.numkang+i.numkoala+i.numkook}});\n        console.log(processedInfo);\n        console.log(\"WEEE\");\n    }).catch(err=>console.log(err))\n}, [props])\n\nreturn(<View>\n    \n    <Text style={styles.titleText}>Data for {moment(props.date).format(\n    \"dddd, MMMM Do YYYY\"\n\n)}</Text>\n<LineChart />\n<View>\n  \n</View>\n\n</View>)\n    }\n\n\nconst styles = StyleSheet.create({\n    container: {\n      flex: 1,\n      backgroundColor: \"#f3f3f3\",\n      justifyContent: \"space-around\",\n      paddingLeft: \"2%\",\n      paddingRight: \"2%\",\n      paddingTop: \"3%\",\n  \n    },titleText: {\n      fontFamily: \"mainFont\",\n      fontSize: 25,\n      marginBottom: \"2%\",\n      alignSelf: \"center\",\n    },\n    lottie: {\n      width: 100,\n      height: 100\n    },\n    topPanel: {\n      flex: 0.15,\n      flexDirection: \"row\",\n      justifyContent: \"space-between\",\n      paddingLeft: \"2%\",\n    },\n    text: {\n      fontFamily: \"mainFont\",\n      fontSize: 30,\n      marginBottom: \"5%\",\n    },\n    stat: {\n      flex: 1,\n      flexDirection: \"column\",\n      fontFamily: \"mainFont\",\n    },\n    widget: {\n      backgroundColor: \"#f8f8f8\",\n      width: \"30%\",\n      height: \"100%\",\n      alignItems: \"center\",\n      justifyContent: \"center\",\n      textAlign: \"center\",\n      backgroundColor: \"white\",\n      borderRadius: 40,\n      shadowColor: \"#000\",\n      shadowOffset: {\n        width: 0,\n        height: 12,\n      },\n      marginBottom: \"5%\",\n      shadowOpacity: 0.58,\n      shadowRadius: 16.0,\n      paddingLeft: \"2%\",\n      elevation: 24,\n    },\n  });\n  "]},"metadata":{},"sourceType":"module"}