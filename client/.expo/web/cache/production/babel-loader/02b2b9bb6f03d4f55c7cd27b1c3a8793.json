{"ast":null,"code":"'use strict';import _extends from\"@babel/runtime/helpers/extends\";import _defineProperty from\"@babel/runtime/helpers/defineProperty\";import _objectWithoutProperties from\"@babel/runtime/helpers/objectWithoutProperties\";import _toConsumableArray from\"@babel/runtime/helpers/toConsumableArray\";function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);if(enumerableOnly)symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable;});keys.push.apply(keys,symbols);}return keys;}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=arguments[i]!=null?arguments[i]:{};if(i%2){ownKeys(Object(source),true).forEach(function(key){_defineProperty(target,key,source[key]);});}else if(Object.getOwnPropertyDescriptors){Object.defineProperties(target,Object.getOwnPropertyDescriptors(source));}else{ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key));});}}return target;}import React from'react';import Text from\"react-native-web/dist/exports/Text\";import PropTypes from'prop-types';import nodeEmoji from'node-emoji';var keys=Object.keys(nodeEmoji.emoji);var names=[].concat(_toConsumableArray(keys),_toConsumableArray(keys.map(function(key){return\":\"+key+\":\";})));var defaultStyle={color:'#000'};var Emoji=function Emoji(_ref){var name=_ref.name,_ref$style=_ref.style,style=_ref$style===void 0?{}:_ref$style,props=_objectWithoutProperties(_ref,[\"name\",\"style\"]);style=_objectSpread(_objectSpread({},defaultStyle),style);return React.createElement(Text,_extends({style:style},props),nodeEmoji.get(name));};Emoji.propTypes=_objectSpread(_objectSpread({},Text.propTypes),{},{name:PropTypes.oneOf(names).isRequired});export default Emoji;","map":{"version":3,"sources":["/Users/clairelivingstone/Desktop/ratio-tracker/client/node_modules/react-native-emoji/index.js"],"names":["React","PropTypes","nodeEmoji","keys","Object","emoji","names","map","key","defaultStyle","color","Emoji","name","style","props","get","propTypes","Text","oneOf","isRequired"],"mappings":"AAAA,a,kjCAEA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,C,qDAEA,MAAOC,CAAAA,SAAP,KAAsB,YAAtB,CACA,MAAOC,CAAAA,SAAP,KAAsB,YAAtB,CAEA,GAAMC,CAAAA,IAAI,CAAGC,MAAM,CAACD,IAAP,CAAYD,SAAS,CAACG,KAAtB,CAAb,CAEA,GAAMC,CAAAA,KAAK,8BACNH,IADM,qBAENA,IAAI,CAACI,GAAL,CAAS,SAACC,GAAD,YAAaA,GAAb,MAAT,CAFM,EAAX,CAKA,GAAMC,CAAAA,YAAY,CAAG,CACnBC,KAAK,CAAE,MADY,CAArB,CAIA,GAAMC,CAAAA,KAAK,CAAG,QAARA,CAAAA,KAAQ,MAAkC,IAAhCC,CAAAA,IAAgC,MAAhCA,IAAgC,iBAA1BC,KAA0B,CAA1BA,KAA0B,qBAAlB,EAAkB,YAAXC,KAAW,iDAC9CD,KAAK,gCACAJ,YADA,EAEAI,KAFA,CAAL,CAKA,MAAO,qBAAC,IAAD,WAAM,KAAK,CAAEA,KAAb,EAAwBC,KAAxB,EAAiCZ,SAAS,CAACa,GAAV,CAAcH,IAAd,CAAjC,CAAP,CACD,CAPD,CASAD,KAAK,CAACK,SAAN,gCACKC,IAAI,CAACD,SADV,MAEEJ,IAAI,CAAEX,SAAS,CAACiB,KAAV,CAAgBZ,KAAhB,EAAuBa,UAF/B,GAKA,cAAeR,CAAAA,KAAf","sourcesContent":["'use strict';\n\nimport React from 'react';\nimport { Text } from 'react-native';\nimport PropTypes from 'prop-types';\nimport nodeEmoji from 'node-emoji';\n\nconst keys = Object.keys(nodeEmoji.emoji);\n\nconst names = [\n  ...keys,\n  ...keys.map((key) => `:${key}:`)\n];\n\nconst defaultStyle = {\n  color: '#000'\n};\n\nconst Emoji = ({name, style = {}, ...props}) => {\n  style = {\n    ...defaultStyle,\n    ...style\n  };\n\n  return <Text style={style} {...props}>{ nodeEmoji.get(name) }</Text>\n};\n\nEmoji.propTypes = {\n  ...Text.propTypes,\n  name: PropTypes.oneOf(names).isRequired\n};\n\nexport default Emoji;\n"]},"metadata":{},"sourceType":"module"}