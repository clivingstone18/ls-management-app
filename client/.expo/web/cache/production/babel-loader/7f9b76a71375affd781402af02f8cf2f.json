{"ast":null,"code":"var times=[30,60];var ampm=12;var weekday=[\"Sunday\",\"Monday\",\"Tuesday\",\"Wednesday\",\"Thursday\",\"Friday\",\"Saturday\"];var month=[\"January\",\"February\",\"March\",\"April\",\"May\",\"June\",\"July\",\"August\",\"September\",\"October\",\"November\",\"December\"];function timeToStr(today){var hour=today.getHours();var minute=today.getMinutes();var timeOfDay;hour>=ampm?timeOfDay=\"PM\":timeOfDay=\"AM\";hour=updateTime(hour,\"hour\");minute=updateTime(minute,\"minute\");return hour+\":\"+minute+\" \"+timeOfDay;}function dateToStr(today){var day=today.getDay();var date=today.getDate();var monthnum=today.getMonth();return weekday[day]+\" \"+date+\" \"+month[monthnum];}function updateTime(k,type){var p;type===\"hour\"&&k>ampm?p=k-12:p=k;if(p<10){return\"0\"+p;}else{return p;}}function minsToNextUpdate(minute){var min_diff=30;var i=0;for(i=0;i<times.length;i++){var diff=times[i]-minute;if(diff>0&&diff<min_diff){min_diff=diff;}}return min_diff;}export{timeToStr,minsToNextUpdate,dateToStr};","map":{"version":3,"sources":["/Users/clairelivingstone/Desktop/ratio-tracker/client/TimeKeeper.js"],"names":["times","ampm","weekday","month","timeToStr","today","hour","getHours","minute","getMinutes","timeOfDay","updateTime","dateToStr","day","getDay","date","getDate","monthnum","getMonth","k","type","p","minsToNextUpdate","min_diff","i","length","diff"],"mappings":"AAAA,GAAMA,CAAAA,KAAK,CAAG,CAAC,EAAD,CAAK,EAAL,CAAd,CACA,GAAMC,CAAAA,IAAI,CAAG,EAAb,CACA,GAAMC,CAAAA,OAAO,CAAG,CACd,QADc,CAEd,QAFc,CAGd,SAHc,CAId,WAJc,CAKd,UALc,CAMd,QANc,CAOd,UAPc,CAAhB,CASA,GAAMC,CAAAA,KAAK,CAAG,CACZ,SADY,CAEZ,UAFY,CAGZ,OAHY,CAIZ,OAJY,CAKZ,KALY,CAMZ,MANY,CAOZ,MAPY,CAQZ,QARY,CASZ,WATY,CAUZ,SAVY,CAWZ,UAXY,CAYZ,UAZY,CAAd,CAeA,QAASC,CAAAA,SAAT,CAAmBC,KAAnB,CAA0B,CAExB,GAAIC,CAAAA,IAAI,CAAGD,KAAK,CAACE,QAAN,EAAX,CACA,GAAIC,CAAAA,MAAM,CAAGH,KAAK,CAACI,UAAN,EAAb,CACA,GAAIC,CAAAA,SAAJ,CACAJ,IAAI,EAAIL,IAAR,CAAgBS,SAAS,CAAG,IAA5B,CAAqCA,SAAS,CAAG,IAAjD,CACAJ,IAAI,CAAGK,UAAU,CAACL,IAAD,CAAO,MAAP,CAAjB,CACAE,MAAM,CAAGG,UAAU,CAACH,MAAD,CAAS,QAAT,CAAnB,CACA,MAAUF,CAAAA,IAAV,KAAkBE,MAAlB,KAA4BE,SAA5B,CACD,CAED,QAASE,CAAAA,SAAT,CAAmBP,KAAnB,CAA0B,CACxB,GAAIQ,CAAAA,GAAG,CAAGR,KAAK,CAACS,MAAN,EAAV,CACA,GAAIC,CAAAA,IAAI,CAAGV,KAAK,CAACW,OAAN,EAAX,CACA,GAAIC,CAAAA,QAAQ,CAAGZ,KAAK,CAACa,QAAN,EAAf,CACA,MAAUhB,CAAAA,OAAO,CAACW,GAAD,CAAjB,KAA0BE,IAA1B,KAAkCZ,KAAK,CAACc,QAAD,CAAvC,CACD,CAED,QAASN,CAAAA,UAAT,CAAoBQ,CAApB,CAAuBC,IAAvB,CAA6B,CAC3B,GAAIC,CAAAA,CAAJ,CACAD,IAAI,GAAK,MAAT,EAAmBD,CAAC,CAAGlB,IAAvB,CAA+BoB,CAAC,CAAGF,CAAC,CAAG,EAAvC,CAA8CE,CAAC,CAAGF,CAAlD,CACA,GAAIE,CAAC,CAAG,EAAR,CAAY,CACV,MAAO,IAAMA,CAAb,CACD,CAFD,IAEO,CACL,MAAOA,CAAAA,CAAP,CACD,CACF,CAED,QAASC,CAAAA,gBAAT,CAA0Bd,MAA1B,CAAkC,CAChC,GAAIe,CAAAA,QAAQ,CAAG,EAAf,CACA,GAAIC,CAAAA,CAAC,CAAG,CAAR,CACA,IAAKA,CAAC,CAAG,CAAT,CAAYA,CAAC,CAAGxB,KAAK,CAACyB,MAAtB,CAA8BD,CAAC,EAA/B,CAAmC,CACjC,GAAIE,CAAAA,IAAI,CAAG1B,KAAK,CAACwB,CAAD,CAAL,CAAWhB,MAAtB,CACA,GAAIkB,IAAI,CAAG,CAAP,EAAYA,IAAI,CAAGH,QAAvB,CAAiC,CAC/BA,QAAQ,CAAGG,IAAX,CACD,CACF,CACD,MAAOH,CAAAA,QAAP,CACD,CAED,OAASnB,SAAT,CAAoBkB,gBAApB,CAAsCV,SAAtC","sourcesContent":["const times = [30, 60];\nconst ampm = 12;\nconst weekday = [\n  \"Sunday\",\n  \"Monday\",\n  \"Tuesday\",\n  \"Wednesday\",\n  \"Thursday\",\n  \"Friday\",\n  \"Saturday\",\n];\nconst month = [\n  \"January\",\n  \"February\",\n  \"March\",\n  \"April\",\n  \"May\",\n  \"June\",\n  \"July\",\n  \"August\",\n  \"September\",\n  \"October\",\n  \"November\",\n  \"December\",\n];\n\nfunction timeToStr(today) {\n\n  let hour = today.getHours();\n  let minute = today.getMinutes();\n  let timeOfDay;\n  hour >= ampm ? (timeOfDay = \"PM\") : (timeOfDay = \"AM\");\n  hour = updateTime(hour, \"hour\");\n  minute = updateTime(minute, \"minute\");\n  return `${hour}:${minute} ${timeOfDay}`;\n}\n\nfunction dateToStr(today) {\n  let day = today.getDay();\n  let date = today.getDate();\n  let monthnum = today.getMonth();\n  return `${weekday[day]} ${date} ${month[monthnum]}`;\n}\n\nfunction updateTime(k, type) {\n  let p;\n  type === \"hour\" && k > ampm ? (p = k - 12) : (p = k);\n  if (p < 10) {\n    return \"0\" + p;\n  } else {\n    return p;\n  }\n}\n\nfunction minsToNextUpdate(minute) {\n  let min_diff = 30;\n  let i = 0;\n  for (i = 0; i < times.length; i++) {\n    let diff = times[i] - minute;\n    if (diff > 0 && diff < min_diff) {\n      min_diff = diff;\n    }\n  }\n  return min_diff;\n}\n\nexport { timeToStr, minsToNextUpdate, dateToStr };\n"]},"metadata":{},"sourceType":"module"}