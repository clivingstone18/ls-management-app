{"ast":null,"code":"import _regeneratorRuntime from\"@babel/runtime/regenerator\";import{UnavailabilityError}from'@unimodules/core';import Platform from\"react-native-web/dist/exports/Platform\";import ExponentPrint from\"./ExponentPrint\";export var Orientation=ExponentPrint.Orientation;export function printAsync(options){return _regeneratorRuntime.async(function printAsync$(_context){while(1){switch(_context.prev=_context.next){case 0:if(!(Platform.OS==='web')){_context.next=4;break;}_context.next=3;return _regeneratorRuntime.awrap(ExponentPrint.print(options));case 3:return _context.abrupt(\"return\",_context.sent);case 4:if(!(!options.uri&&!options.html&&Platform.OS==='ios'&&!options.markupFormatterIOS)){_context.next=6;break;}throw new Error('Must provide either `html` or `uri` to print');case 6:if(!(options.uri&&options.html)){_context.next=8;break;}throw new Error('Must provide exactly one of `html` and `uri` but both were specified');case 8:_context.next=10;return _regeneratorRuntime.awrap(ExponentPrint.print(options));case 10:return _context.abrupt(\"return\",_context.sent);case 11:case\"end\":return _context.stop();}}},null,null,null,Promise);}export function selectPrinterAsync(){return _regeneratorRuntime.async(function selectPrinterAsync$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:if(!ExponentPrint.selectPrinter){_context2.next=4;break;}_context2.next=3;return _regeneratorRuntime.awrap(ExponentPrint.selectPrinter());case 3:return _context2.abrupt(\"return\",_context2.sent);case 4:throw new UnavailabilityError('Print','selectPrinterAsync');case 5:case\"end\":return _context2.stop();}}},null,null,null,Promise);}export function printToFileAsync(){var options,_args3=arguments;return _regeneratorRuntime.async(function printToFileAsync$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:options=_args3.length>0&&_args3[0]!==undefined?_args3[0]:{};_context3.next=3;return _regeneratorRuntime.awrap(ExponentPrint.printToFileAsync(options));case 3:return _context3.abrupt(\"return\",_context3.sent);case 4:case\"end\":return _context3.stop();}}},null,null,null,Promise);}","map":{"version":3,"sources":["../src/Print.ts"],"names":[],"mappings":"4DAAA,OAAS,mBAAT,KAAoC,kBAApC,C,6DAGA,MAAO,CAAA,aAAP,uBAWA,MAAO,IAAM,CAAA,WAAW,CAAoB,aAAa,CAAC,WAAnD,CAEP,MAAO,SAAe,CAAA,UAAf,CAA0B,OAA1B,2HACD,QAAQ,CAAC,EAAT,GAAgB,KADf,2EAEU,aAAa,CAAC,KAAd,CAAoB,OAApB,CAFV,oEAID,CAAC,OAAO,CAAC,GAAT,EAAgB,CAAC,OAAO,CAAC,IAAzB,EAAiC,QAAQ,CAAC,EAAT,GAAgB,KAAjD,EAA0D,CAAC,OAAO,CAAC,kBAJlE,+BAKG,IAAI,CAAA,KAAJ,CAAU,8CAAV,CALH,aAOD,OAAO,CAAC,GAAR,EAAe,OAAO,CAAC,IAPtB,+BAQG,IAAI,CAAA,KAAJ,CAAU,sEAAV,CARH,0DAUQ,aAAa,CAAC,KAAd,CAAoB,OAApB,CAVR,+HAaP,MAAO,SAAe,CAAA,kBAAf,sIACD,aAAa,CAAC,aADb,4EAEU,aAAa,CAAC,aAAd,EAFV,sEAKC,IAAI,CAAA,mBAAJ,CAAwB,OAAxB,CAAiC,oBAAjC,CALD,uEAQP,MAAO,SAAe,CAAA,gBAAf,6JAAgC,OAAhC,kDAA4D,EAA5D,mDACQ,aAAa,CAAC,gBAAd,CAA+B,OAA/B,CADR","sourcesContent":["import { UnavailabilityError } from '@unimodules/core';\nimport { Platform } from 'react-native';\n\nimport ExponentPrint from './ExponentPrint';\nimport {\n  FilePrintOptions,\n  FilePrintResult,\n  OrientationType,\n  PrintOptions,\n  Printer,\n} from './Print.types';\n\nexport { FilePrintOptions, FilePrintResult, OrientationType, PrintOptions, Printer };\n\nexport const Orientation: OrientationType = ExponentPrint.Orientation;\n\nexport async function printAsync(options: PrintOptions): Promise<void> {\n  if (Platform.OS === 'web') {\n    return await ExponentPrint.print(options);\n  }\n  if (!options.uri && !options.html && Platform.OS === 'ios' && !options.markupFormatterIOS) {\n    throw new Error('Must provide either `html` or `uri` to print');\n  }\n  if (options.uri && options.html) {\n    throw new Error('Must provide exactly one of `html` and `uri` but both were specified');\n  }\n  return await ExponentPrint.print(options);\n}\n\nexport async function selectPrinterAsync(): Promise<Printer> {\n  if (ExponentPrint.selectPrinter) {\n    return await ExponentPrint.selectPrinter();\n  }\n\n  throw new UnavailabilityError('Print', 'selectPrinterAsync');\n}\n\nexport async function printToFileAsync(options: FilePrintOptions = {}): Promise<FilePrintResult> {\n  return await ExponentPrint.printToFileAsync(options);\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}