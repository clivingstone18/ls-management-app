{"ast":null,"code":"import _slicedToArray from\"@babel/runtime/helpers/slicedToArray\";import React,{useState,useEffect}from\"react\";import StyleSheet from\"react-native-web/dist/exports/StyleSheet\";import Text from\"react-native-web/dist/exports/Text\";import View from\"react-native-web/dist/exports/View\";import{timeToStr,minsToNextUpdate,dateToStr}from\"./TimeKeeper.js\";import{useFonts}from\"expo-font\";function Clock(){var _useState=useState(\"\"),_useState2=_slicedToArray(_useState,2),time=_useState2[0],setTime=_useState2[1];var _useState3=useState(\"\"),_useState4=_slicedToArray(_useState3,2),day=_useState4[0],setDay=_useState4[1];var _useState5=useState(0),_useState6=_slicedToArray(_useState5,2),timeToNextUpdate=_useState6[0],setTimeToNextUpdate=_useState6[1];var _useFonts=useFonts({mainFont:require(\"./assets/fonts/Roboto-Thin.ttf\")}),_useFonts2=_slicedToArray(_useFonts,1),loaded=_useFonts2[0];var tick=function tick(){var currDate=new Date();setTime(timeToStr(currDate));setTimeToNextUpdate(minsToNextUpdate(currDate.getMinutes()));setDay(dateToStr(currDate));};useEffect(function(){var timerID=setInterval(function(){return tick();},1000);return function cleanup(){clearInterval(timerID);};});if(loaded){return React.createElement(View,{style:clockStyles.container},React.createElement(Text,{style:clockStyles.text},day),React.createElement(Text,{style:clockStyles.text},time));}else{return React.createElement(Text,null,\"font not loaded\");}}var clockStyles=StyleSheet.create({container:{flex:0.2,backgroundColor:\"white\",alignItems:\"flex-start\",justifyContent:\"center\",shadowColor:\"#000\",borderRadius:5,width:\"94%\",paddingLeft:\"2%\",marginLeft:\"3.2%\",shadowOffset:{width:0,height:12},shadowOpacity:0.58,shadowRadius:16.0,elevation:24},text:{fontSize:40,fontFamily:\"mainFont\"}});export default Clock;","map":{"version":3,"sources":["/Users/clairelivingstone/Desktop/ratio-tracker/client/Clock.js"],"names":["React","useState","useEffect","timeToStr","minsToNextUpdate","dateToStr","useFonts","Clock","time","setTime","day","setDay","timeToNextUpdate","setTimeToNextUpdate","mainFont","require","loaded","tick","currDate","Date","getMinutes","timerID","setInterval","cleanup","clearInterval","clockStyles","container","text","StyleSheet","create","flex","backgroundColor","alignItems","justifyContent","shadowColor","borderRadius","width","paddingLeft","marginLeft","shadowOffset","height","shadowOpacity","shadowRadius","elevation","fontSize","fontFamily"],"mappings":"iEAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,CAA0BC,SAA1B,KAA2C,OAA3C,C,2KAEA,OAASC,SAAT,CAAoBC,gBAApB,CAAsCC,SAAtC,uBACA,OAASC,QAAT,KAAyB,WAAzB,CAEA,QAASC,CAAAA,KAAT,EAAiB,eACSN,QAAQ,CAAC,EAAD,CADjB,wCACRO,IADQ,eACFC,OADE,8BAEOR,QAAQ,CAAC,EAAD,CAFf,yCAERS,GAFQ,eAEHC,MAFG,8BAGiCV,QAAQ,CAAC,CAAD,CAHzC,yCAGRW,gBAHQ,eAGUC,mBAHV,6BAKEP,QAAQ,CAAC,CACxBQ,QAAQ,CAAEC,OAAO,kCADO,CAAD,CALV,wCAKRC,MALQ,eASf,GAAMC,CAAAA,IAAI,CAAG,QAAPA,CAAAA,IAAO,EAAM,CACjB,GAAIC,CAAAA,QAAQ,CAAG,GAAIC,CAAAA,IAAJ,EAAf,CACAV,OAAO,CAACN,SAAS,CAACe,QAAD,CAAV,CAAP,CACAL,mBAAmB,CAACT,gBAAgB,CAACc,QAAQ,CAACE,UAAT,EAAD,CAAjB,CAAnB,CACAT,MAAM,CAACN,SAAS,CAACa,QAAD,CAAV,CAAN,CACD,CALD,CAOAhB,SAAS,CAAC,UAAM,CACd,GAAImB,CAAAA,OAAO,CAAGC,WAAW,CAAC,iBAAML,CAAAA,IAAI,EAAV,EAAD,CAAe,IAAf,CAAzB,CACA,MAAO,SAASM,CAAAA,OAAT,EAAmB,CACxBC,aAAa,CAACH,OAAD,CAAb,CACD,CAFD,CAGD,CALQ,CAAT,CAOA,GAAIL,MAAJ,CAAY,CACV,MACE,qBAAC,IAAD,EAAM,KAAK,CAAES,WAAW,CAACC,SAAzB,EACE,oBAAC,IAAD,EAAM,KAAK,CAAED,WAAW,CAACE,IAAzB,EAAgCjB,GAAhC,CADF,CAGE,oBAAC,IAAD,EAAM,KAAK,CAAEe,WAAW,CAACE,IAAzB,EAAgCnB,IAAhC,CAHF,CADF,CAOD,CARD,IAQO,CACL,MAAO,qBAAC,IAAD,wBAAP,CACD,CACF,CAED,GAAMiB,CAAAA,WAAW,CAAGG,UAAU,CAACC,MAAX,CAAkB,CACpCH,SAAS,CAAE,CACTI,IAAI,CAAE,GADG,CAETC,eAAe,CAAE,OAFR,CAGTC,UAAU,CAAE,YAHH,CAITC,cAAc,CAAE,QAJP,CAKTC,WAAW,CAAE,MALJ,CAMTC,YAAY,CAAE,CANL,CAOTC,KAAK,CAAE,KAPE,CAQTC,WAAW,CAAE,IARJ,CASTC,UAAU,CAAE,MATH,CAUTC,YAAY,CAAE,CACZH,KAAK,CAAE,CADK,CAEZI,MAAM,CAAE,EAFI,CAVL,CAcTC,aAAa,CAAE,IAdN,CAeTC,YAAY,CAAE,IAfL,CAgBTC,SAAS,CAAE,EAhBF,CADyB,CAmBpChB,IAAI,CAAE,CACJiB,QAAQ,CAAE,EADN,CAEJC,UAAU,CAAE,UAFR,CAnB8B,CAAlB,CAApB,CAyBA,cAAetC,CAAAA,KAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { StyleSheet, Text, View } from \"react-native\";\nimport { timeToStr, minsToNextUpdate, dateToStr } from \"./TimeKeeper.js\";\nimport { useFonts } from \"expo-font\";\n\nfunction Clock() {\n  const [time, setTime] = useState(\"\");\n  const [day, setDay] = useState(\"\");\n  const [timeToNextUpdate, setTimeToNextUpdate] = useState(0);\n\n  const [loaded] = useFonts({\n    mainFont: require(\"./assets/fonts/Roboto-Thin.ttf\"),\n  });\n\n  const tick = () => {\n    let currDate = new Date();\n    setTime(timeToStr(currDate));\n    setTimeToNextUpdate(minsToNextUpdate(currDate.getMinutes()));\n    setDay(dateToStr(currDate));\n  };\n\n  useEffect(() => {\n    var timerID = setInterval(() => tick(), 1000);\n    return function cleanup() {\n      clearInterval(timerID);\n    };\n  });\n\n  if (loaded) {\n    return (\n      <View style={clockStyles.container}>\n        <Text style={clockStyles.text}>{day}</Text>\n\n        <Text style={clockStyles.text}>{time}</Text>\n      </View>\n    );\n  } else {\n    return <Text>font not loaded</Text>;\n  }\n}\n\nconst clockStyles = StyleSheet.create({\n  container: {\n    flex: 0.2,\n    backgroundColor: \"white\",\n    alignItems: \"flex-start\",\n    justifyContent: \"center\",\n    shadowColor: \"#000\",\n    borderRadius: 5,\n    width: \"94%\",\n    paddingLeft: \"2%\",\n    marginLeft: \"3.2%\",\n    shadowOffset: {\n      width: 0,\n      height: 12,\n    },\n    shadowOpacity: 0.58,\n    shadowRadius: 16.0,\n    elevation: 24,\n  },\n  text: {\n    fontSize: 40,\n    fontFamily: \"mainFont\",\n  },\n});\n\nexport default Clock;\n"]},"metadata":{},"sourceType":"module"}